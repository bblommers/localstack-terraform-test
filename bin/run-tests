#!/bin/bash

export HERE=$(pwd)
export LST_DIR=${HERE}/localstack
export BUILD_DIR=${HERE}/build

export LST_LOG=${BUILD_DIR}/localstack.log
export TEST_LOG=${BUILD_DIR}/test.log

export AWS_DEFAULT_REGION=us-east-1
export AWS_ACCESS_KEY_ID=test
export AWS_SECRET_ACCESS_KEY=test

export TF_ACC=1
export ACCTEST_PARALLELISM=1

TEST_BIN=$HOME/.cache/localstack/aws.test
[ ! -f $TEST_BIN ] && { echo "aws.test not installed. please run bin/install-aws-test"; exit 1; }

TESTS=${1:-TestAcc*}

function run_localstack() {
	cd ${LST_DIR}
	source .venv/bin/activate
	exec bin/localstack start --host
}

function main() {
	mkdir -p ${BUILD_DIR}

	rm -f ${LST_LOG}
	# start localstack in the background
	run_localstack > >(tee ${LST_LOG}) &
	export lst_pid=$! # returns the pid of run_localstack https://stackoverflow.com/a/8048493/804840

	# TODO: subprocesses will stay open if interrupted

	# wait for localstack to be ready
	echo "waiting on localstack to start on process ${lst_pid}"

	while true; do
		sleep 1

		if `grep --max-count=1 -q "Ready\." ${LST_LOG}`; then
			break
		fi
		if ! ps -p ${lst_pid} > /dev/null; then
			echo "localstack terminated while waiting"
			exit 1
		fi
	done

	# this is where the testfixtures live
	cd terraform-provider-aws

	echo "running ${TEST_BIN} -test.v -test.run -test.parallel=${ACCTEST_PARALLELISM} ${TESTS}"

	set -o pipefail # otherwise $? would output the return code of tee
	${TEST_BIN} -test.v -test.run ${TESTS} | tee ${TEST_LOG}
	ret=$?

	# kill the running localstack instance
	echo "killing localstack ${lst_pid}"
	kill ${lst_pid}
	echo "waiting on localstack to end"
	wait ${lst_pid}

	# exit with the test result
	exit ${ret}
}

main "$@"
